import sys

AC_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
BD_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
SD_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
LT_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
MT_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
HT_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
RS_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
CP_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
CB_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
CY_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
OH_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
CH_a = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']

AC_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
BD_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
SD_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
LT_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
MT_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
HT_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
RS_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
CP_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
CB_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
CY_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
OH_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']
CH_b = ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-']

mask = {'AC': 0x800, 'BD': 0x400, 'SD': 0x200, 'LT': 0x100, 'MT': 0x80, 'HT': 0x40, 'RS': 0x20, 'CP': 0x10, 'CB': 0x1, 'CY': 0x02, 'OH': 0x04, 'CH': 0x08}

part = 0
part_len = 0

with open(sys.argv[1]) as prm:
    line = prm.readline()
    while line:
        if line.startswith("SCALE"):
            print("Scale = {}".format(line.split("=")[1].strip()))
        elif line.startswith("PART"):
            part = int(line.split("=")[1].strip()) + 1
            print("Part = {}".format(part))
        elif line.startswith("LENGTH"):
            part_len = int(line.split("=")[1].strip())
            print("Length = {}".format(part_len))
        elif line.startswith("STEP"):
            s_num = int(line.split("=")[0].split(" ")[1])
            # ignore even numbered lines, they are for 32 step parts
            # odd lines seem to be steps 1-16, even numbers 17-32
            if s_num % 2 != 0:
                step = int(s_num/2)
                if part == 2:
                    step = step + 16
                part_a = int(line.split("=")[1].strip().split(" ")[0], 2)
                part_b = int(line.split("=")[1].strip().split(" ")[1], 2)
                AC_a[step] = 'x' if part_a & mask['AC'] else '-'
                BD_a[step] = 'x' if part_a & mask['BD'] else '-'
                SD_a[step] = 'x' if part_a & mask['SD'] else '-'
                LT_a[step] = 'x' if part_a & mask['LT'] else '-'
                MT_a[step] = 'x' if part_a & mask['MT'] else '-'
                HT_a[step] = 'x' if part_a & mask['HT'] else '-'
                RS_a[step] = 'x' if part_a & mask['RS'] else '-'
                CP_a[step] = 'x' if part_a & mask['CP'] else '-'
                CB_a[step] = 'x' if part_a & mask['CB'] else '-'
                CY_a[step] = 'x' if part_a & mask['CY'] else '-'
                OH_a[step] = 'x' if part_a & mask['OH'] else '-'
                CH_a[step] = 'x' if part_a & mask['CH'] else '-'

                AC_b[step] = 'x' if part_b & mask['AC'] else '-'
                BD_b[step] = 'x' if part_b & mask['BD'] else '-'
                SD_b[step] = 'x' if part_b & mask['SD'] else '-'
                LT_b[step] = 'x' if part_b & mask['LT'] else '-'
                MT_b[step] = 'x' if part_b & mask['MT'] else '-'
                HT_b[step] = 'x' if part_b & mask['HT'] else '-'
                RS_b[step] = 'x' if part_b & mask['RS'] else '-'
                CP_b[step] = 'x' if part_b & mask['CP'] else '-'
                CB_b[step] = 'x' if part_b & mask['CB'] else '-'
                CY_b[step] = 'x' if part_b & mask['CY'] else '-'
                OH_b[step] = 'x' if part_b & mask['OH'] else '-'
                CH_b[step] = 'x' if part_b & mask['CH'] else '-'
        line = prm.readline()
        
# print the results
print("")
print("** Variation A **")
print("** 1st Part **")
print("INST |1 2 3 4|5 6 7 8|9 1 1 1|1 1 1 1")
print("     |       |       |  0 1 2|3 4 5 6")
print("-----|-------|-------|-------|-------")
print(" AC  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(AC_a[0],AC_a[1],AC_a[2],AC_a[3],AC_a[4],AC_a[5],AC_a[6],AC_a[7],AC_a[8],AC_a[9],AC_a[10],AC_a[11],AC_a[12],AC_a[13],AC_a[14],AC_a[15]))
print(" BD  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(BD_a[0],BD_a[1],BD_a[2],BD_a[3],BD_a[4],BD_a[5],BD_a[6],BD_a[7],BD_a[8],BD_a[9],BD_a[10],BD_a[11],BD_a[12],BD_a[13],BD_a[14],BD_a[15]))
print(" SD  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(SD_a[0],SD_a[1],SD_a[2],SD_a[3],SD_a[4],SD_a[5],SD_a[6],SD_a[7],SD_a[8],SD_a[9],SD_a[10],SD_a[11],SD_a[12],SD_a[13],SD_a[14],SD_a[15]))
print(" LT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(LT_a[0],LT_a[1],LT_a[2],LT_a[3],LT_a[4],LT_a[5],LT_a[6],LT_a[7],LT_a[8],LT_a[9],LT_a[10],LT_a[11],LT_a[12],LT_a[13],LT_a[14],LT_a[15]))
print(" MT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(MT_a[0],MT_a[1],MT_a[2],MT_a[3],MT_a[4],MT_a[5],MT_a[6],MT_a[7],MT_a[8],MT_a[9],MT_a[10],MT_a[11],MT_a[12],MT_a[13],MT_a[14],MT_a[15]))
print(" HT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(HT_a[0],HT_a[1],HT_a[2],HT_a[3],HT_a[4],HT_a[5],HT_a[6],HT_a[7],HT_a[8],HT_a[9],HT_a[10],HT_a[11],HT_a[12],HT_a[13],HT_a[14],HT_a[15]))
print(" RS  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(RS_a[0],RS_a[1],RS_a[2],RS_a[3],RS_a[4],RS_a[5],RS_a[6],RS_a[7],RS_a[8],RS_a[9],RS_a[10],RS_a[11],RS_a[12],RS_a[13],RS_a[14],RS_a[15]))
print(" CP  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CP_a[0],CP_a[1],CP_a[2],CP_a[3],CP_a[4],CP_a[5],CP_a[6],CP_a[7],CP_a[8],CP_a[9],CP_a[10],CP_a[11],CP_a[12],CP_a[13],CP_a[14],CP_a[15]))
print(" CB  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CB_a[0],CB_a[1],CB_a[2],CB_a[3],CB_a[4],CB_a[5],CB_a[6],CB_a[7],CB_a[8],CB_a[9],CB_a[10],CB_a[11],CB_a[12],CB_a[13],CB_a[14],CB_a[15]))
print(" CY  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CY_a[0],CY_a[1],CY_a[2],CY_a[3],CY_a[4],CY_a[5],CY_a[6],CY_a[7],CY_a[8],CY_a[9],CY_a[10],CY_a[11],CY_a[12],CY_a[13],CY_a[14],CY_a[15]))
print(" OH  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(OH_a[0],OH_a[1],OH_a[2],OH_a[3],OH_a[4],OH_a[5],OH_a[6],OH_a[7],OH_a[8],OH_a[9],OH_a[10],OH_a[11],OH_a[12],OH_a[13],OH_a[14],OH_a[15]))
print(" CH  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CH_a[0],CH_a[1],CH_a[2],CH_a[3],CH_a[4],CH_a[5],CH_a[6],CH_a[7],CH_a[8],CH_a[9],CH_a[10],CH_a[11],CH_a[12],CH_a[13],CH_a[14],CH_a[15]))
print("")
if len(AC_a) > 16:
    print("** 2nd Part **")
    print("INST |1 2 3 4|5 6 7 8|9 1 1 1|1 1 1 1")
    print("     |       |       |  0 1 2|3 4 5 6")
    print("-----|-------|-------|-------|-------")
    print(" AC  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(AC_a[16],AC_a[17],AC_a[18],AC_a[19],AC_a[20],AC_a[21],AC_a[22],AC_a[23],AC_a[24],AC_a[25],AC_a[26],AC_a[27],AC_a[28],AC_a[29],AC_a[30],AC_a[31]))
    print(" BD  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(BD_a[16],BD_a[17],BD_a[18],BD_a[19],BD_a[20],BD_a[21],BD_a[22],BD_a[23],BD_a[24],BD_a[25],BD_a[26],BD_a[27],BD_a[28],BD_a[29],BD_a[30],BD_a[31]))
    print(" SD  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(SD_a[16],SD_a[17],SD_a[18],SD_a[19],SD_a[20],SD_a[21],SD_a[22],SD_a[23],SD_a[24],SD_a[25],SD_a[26],SD_a[27],SD_a[28],SD_a[29],SD_a[30],SD_a[31]))
    print(" LT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(LT_a[16],LT_a[17],LT_a[18],LT_a[19],LT_a[20],LT_a[21],LT_a[22],LT_a[23],LT_a[24],LT_a[25],LT_a[26],LT_a[27],LT_a[28],LT_a[29],LT_a[30],LT_a[31]))
    print(" MT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(MT_a[26],MT_a[17],MT_a[18],MT_a[19],MT_a[20],MT_a[21],MT_a[22],MT_a[23],MT_a[24],MT_a[25],MT_a[26],MT_a[27],MT_a[28],MT_a[29],MT_a[30],MT_a[31]))
    print(" HT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(HT_a[16],HT_a[17],HT_a[18],HT_a[19],HT_a[20],HT_a[21],HT_a[22],HT_a[23],HT_a[24],HT_a[25],HT_a[26],HT_a[27],HT_a[28],HT_a[29],HT_a[30],HT_a[31]))
    print(" RS  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(RS_a[16],RS_a[17],RS_a[18],RS_a[19],RS_a[20],RS_a[21],RS_a[22],RS_a[23],RS_a[24],RS_a[25],RS_a[26],RS_a[27],RS_a[28],RS_a[29],RS_a[30],RS_a[31]))
    print(" CP  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CP_a[16],CP_a[17],CP_a[18],CP_a[19],CP_a[20],CP_a[21],CP_a[22],CP_a[23],CP_a[24],CP_a[25],CP_a[26],CP_a[27],CP_a[28],CP_a[29],CP_a[30],CP_a[31]))
    print(" CB  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CB_a[16],CB_a[17],CB_a[18],CB_a[19],CB_a[20],CB_a[21],CB_a[22],CB_a[23],CB_a[24],CB_a[25],CB_a[26],CB_a[27],CB_a[28],CB_a[29],CB_a[30],CB_a[31]))
    print(" CY  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CY_a[16],CY_a[17],CY_a[18],CY_a[19],CY_a[20],CY_a[21],CY_a[22],CY_a[23],CY_a[24],CY_a[25],CY_a[26],CY_a[27],CY_a[28],CY_a[29],CY_a[30],CY_a[31]))
    print(" OH  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(OH_a[16],OH_a[17],OH_a[18],OH_a[19],OH_a[20],OH_a[21],OH_a[22],OH_a[23],OH_a[24],OH_a[25],OH_a[26],OH_a[27],OH_a[28],OH_a[29],OH_a[30],OH_a[31]))
    print(" CH  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CH_a[16],CH_a[17],CH_a[18],CH_a[19],CH_a[20],CH_a[21],CH_a[22],CH_a[23],CH_a[24],CH_a[25],CH_a[26],CH_a[27],CH_a[28],CH_a[29],CH_a[30],CH_a[31]))
print("")
print("")
print("** Variation B **")
print("** 1st Part **")
print("INST |1 2 3 4|5 6 7 8|9 1 1 1|1 1 1 1")
print("     |       |       |  0 1 2|3 4 5 6")
print("-----|-------|-------|-------|-------")
print(" AC  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(AC_b[0],AC_b[1],AC_b[2],AC_b[3],AC_b[4],AC_b[5],AC_b[6],AC_b[7],AC_b[8],AC_b[9],AC_b[10],AC_b[11],AC_b[12],AC_b[13],AC_b[14],AC_b[15]))
print(" BD  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(BD_b[0],BD_b[1],BD_b[2],BD_b[3],BD_b[4],BD_b[5],BD_b[6],BD_b[7],BD_b[8],BD_b[9],BD_b[10],BD_b[11],BD_b[12],BD_b[13],BD_b[14],BD_b[15]))
print(" SD  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(SD_b[0],SD_b[1],SD_b[2],SD_b[3],SD_b[4],SD_b[5],SD_b[6],SD_b[7],SD_b[8],SD_b[9],SD_b[10],SD_b[11],SD_b[12],SD_b[13],SD_b[14],SD_b[15]))
print(" LT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(LT_b[0],LT_b[1],LT_b[2],LT_b[3],LT_b[4],LT_b[5],LT_b[6],LT_b[7],LT_b[8],LT_b[9],LT_b[10],LT_b[11],LT_b[12],LT_b[13],LT_b[14],LT_b[15]))
print(" MT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(MT_b[0],MT_b[1],MT_b[2],MT_b[3],MT_b[4],MT_b[5],MT_b[6],MT_b[7],MT_b[8],MT_b[9],MT_b[10],MT_b[11],MT_b[12],MT_b[13],MT_b[14],MT_b[15]))
print(" HT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(HT_b[0],HT_b[1],HT_b[2],HT_b[3],HT_b[4],HT_b[5],HT_b[6],HT_b[7],HT_b[8],HT_b[9],HT_b[10],HT_b[11],HT_b[12],HT_b[13],HT_b[14],HT_b[15]))
print(" RS  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(RS_b[0],RS_b[1],RS_b[2],RS_b[3],RS_b[4],RS_b[5],RS_b[6],RS_b[7],RS_b[8],RS_b[9],RS_b[10],RS_b[11],RS_b[12],RS_b[13],RS_b[14],RS_b[15]))
print(" CP  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CP_b[0],CP_b[1],CP_b[2],CP_b[3],CP_b[4],CP_b[5],CP_b[6],CP_b[7],CP_b[8],CP_b[9],CP_b[10],CP_b[11],CP_b[12],CP_b[13],CP_b[14],CP_b[15]))
print(" CB  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CB_b[0],CB_b[1],CB_b[2],CB_b[3],CB_b[4],CB_b[5],CB_b[6],CB_b[7],CB_b[8],CB_b[9],CB_b[10],CB_b[11],CB_b[12],CB_b[13],CB_b[14],CB_b[15]))
print(" CY  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CY_b[0],CY_b[1],CY_b[2],CY_b[3],CY_b[4],CY_b[5],CY_b[6],CY_b[7],CY_b[8],CY_b[9],CY_b[10],CY_b[11],CY_b[12],CY_b[13],CY_b[14],CY_b[15]))
print(" OH  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(OH_b[0],OH_b[1],OH_b[2],OH_b[3],OH_b[4],OH_b[5],OH_b[6],OH_b[7],OH_b[8],OH_b[9],OH_b[10],OH_b[11],OH_b[12],OH_b[13],OH_b[14],OH_b[15]))
print(" CH  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CH_b[0],CH_b[1],CH_b[2],CH_b[3],CH_b[4],CH_b[5],CH_b[6],CH_b[7],CH_b[8],CH_b[9],CH_b[10],CH_b[11],CH_b[12],CH_b[13],CH_b[14],CH_b[15]))
print("")
if len(AC_b) > 16:
    print("** 2nd Part **")
    print("INST |1 2 3 4|5 6 7 8|9 1 1 1|1 1 1 1")
    print("     |       |       |  0 1 2|3 4 5 6")
    print("-----|-------|-------|-------|-------")
    print(" AC  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(AC_b[16],AC_b[17],AC_b[18],AC_b[19],AC_b[20],AC_b[21],AC_b[22],AC_b[23],AC_b[24],AC_b[25],AC_b[26],AC_b[27],AC_b[28],AC_b[29],AC_b[30],AC_b[31]))
    print(" BD  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(BD_b[16],BD_b[17],BD_b[18],BD_b[19],BD_b[20],BD_b[21],BD_b[22],BD_b[23],BD_b[24],BD_b[25],BD_b[26],BD_b[27],BD_b[28],BD_b[29],BD_b[30],BD_b[31]))
    print(" SD  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(SD_b[16],SD_b[17],SD_b[18],SD_b[19],SD_b[20],SD_b[21],SD_b[22],SD_b[23],SD_b[24],SD_b[25],SD_b[26],SD_b[27],SD_b[28],SD_b[29],SD_b[30],SD_b[31]))
    print(" LT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(LT_b[16],LT_b[17],LT_b[18],LT_b[19],LT_b[20],LT_b[21],LT_b[22],LT_b[23],LT_b[24],LT_b[25],LT_b[26],LT_b[27],LT_b[28],LT_b[29],LT_b[30],LT_b[31]))
    print(" MT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(MT_b[26],MT_b[17],MT_b[18],MT_b[19],MT_b[20],MT_b[21],MT_b[22],MT_b[23],MT_b[24],MT_b[25],MT_b[26],MT_b[27],MT_b[28],MT_b[29],MT_b[30],MT_b[31]))
    print(" HT  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(HT_b[16],HT_b[17],HT_b[18],HT_b[19],HT_b[20],HT_b[21],HT_b[22],HT_b[23],HT_b[24],HT_b[25],HT_b[26],HT_b[27],HT_b[28],HT_b[29],HT_b[30],HT_b[31]))
    print(" RS  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(RS_b[16],RS_b[17],RS_b[18],RS_b[19],RS_b[20],RS_b[21],RS_b[22],RS_b[23],RS_b[24],RS_b[25],RS_b[26],RS_b[27],RS_b[28],RS_b[29],RS_b[30],RS_b[31]))
    print(" CP  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CP_b[16],CP_b[17],CP_b[18],CP_b[19],CP_b[20],CP_b[21],CP_b[22],CP_b[23],CP_b[24],CP_b[25],CP_b[26],CP_b[27],CP_b[28],CP_b[29],CP_b[30],CP_b[31]))
    print(" CB  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CB_b[16],CB_b[17],CB_b[18],CB_b[19],CB_b[20],CB_b[21],CB_b[22],CB_b[23],CB_b[24],CB_b[25],CB_b[26],CB_b[27],CB_b[28],CB_b[29],CB_b[30],CB_b[31]))
    print(" CY  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CY_b[16],CY_b[17],CY_b[18],CY_b[19],CY_b[20],CY_b[21],CY_b[22],CY_b[23],CY_b[24],CY_b[25],CY_b[26],CY_b[27],CY_b[28],CY_b[29],CY_b[30],CY_b[31]))
    print(" OH  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(OH_b[16],OH_b[17],OH_b[18],OH_b[19],OH_b[20],OH_b[21],OH_b[22],OH_b[23],OH_b[24],OH_b[25],OH_b[26],OH_b[27],OH_b[28],OH_b[29],OH_b[30],OH_b[31]))
    print(" CH  |{} {} {} {}|{} {} {} {}|{} {} {} {}|{} {} {} {}".format(CH_b[16],CH_b[17],CH_b[18],CH_b[19],CH_b[20],CH_b[21],CH_b[22],CH_b[23],CH_b[24],CH_b[25],CH_b[26],CH_b[27],CH_b[28],CH_b[29],CH_b[30],CH_b[31]))
    print("")
